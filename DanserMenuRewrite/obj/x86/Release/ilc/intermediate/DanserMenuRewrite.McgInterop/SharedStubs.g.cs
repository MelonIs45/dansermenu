#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;
using global::Windows.Foundation;
using global::Windows.Foundation.Collections;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The '__Interop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace __Interop
{
	internal unsafe static partial class ComCallHelpers
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.IntPtr arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__1(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__2(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					global::System.IntPtr arg5, 
					void* arg6, 
					void* arg7)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__3(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6, 
								arg7
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__5(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__7(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__8(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__10(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__12(
								__pTarget, 
								__pThis
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__13(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__14(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__15(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__16(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__17(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__18(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__19(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Thickness arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__20(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__21(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__22(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__23(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__24(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__25(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__26(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__27(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__35(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__36(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__37(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__38(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__40(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__41(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__45(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__46(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					global::Windows.Storage.Streams.InputStreamOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__50(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__51(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__54(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__57(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__58(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__59(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__60(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__10(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__19(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					global::System.IntPtr arg3, 
					uint arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__61(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::System.IntPtr arg4, 
					uint arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__62(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__63(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Internal_WinRT_Interop.WinRTCallbacks_DispatcherQueuePriority__System_Private_WinRTInterop_CoreLib arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__64(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__65(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__66(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__67(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__68(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__69(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System_Runtime_InteropServices_ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__70(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Call__void__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			global::__Interop.Intrinsics.StdCall__71(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__72(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__73(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__12(
								__pTarget, 
								__pThis
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Call(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgMarshal.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::__Interop.Intrinsics.StdCall__74(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::System.Runtime.InteropServices.McgMarshal.ThrowOnExternalCallFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}
	}

	internal unsafe static partial class ForwardComStubs
	{
		// Signature, Windows.UI.Xaml.Data.IPropertyChangedEventArgs.get_PropertyName, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static string Stub_1<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Interop.INotifyCollectionChangedEventArgs.get_NewItems, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_2<TThis, TResult>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_TResult__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Interop.INotifyCollectionChangedEventArgs.get_NewStartingIndex, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_3<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			int unsafe_value__retval;
			int value__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [fwd] [in] [EETypeRva:0x00040F38] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static object Stub_4<TThis>(
					global::System.__ComObject __this, 
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_value = default(void*);
			global::System.Type__Impl.UnsafeType unsafe_targetType = default(global::System.Type__Impl.UnsafeType);
			void* unsafe_parameter = default(void*);
			global::System.Runtime.InteropServices.HSTRING unsafe_language = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_result__retval = default(void*);
			object result__retval = default(object);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_value = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
				int unsafe_targetType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									targetType, 
									out unsafe_targetType__HSTRING__Name, 
									out unsafe_targetType__int__Kind
								);
				unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
				unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
				unsafe_parameter = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				fixed (char* pBuffer_language = language)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_language;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_language, language, &(hstring_header_language), &(unsafe_language));
					unsafe_result__retval = null;
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_value, 
										unsafe_targetType, 
										unsafe_parameter, 
										unsafe_language, 
										&(unsafe_result__retval)
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				}
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_targetType.Name.handle);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_KeyUp, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_5<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.remove_KeyUp, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_6<TThis>(
					global::System.__ComObject __this, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								token
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_GotFocus, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_7<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DragEnter, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_8<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_PointerPressed, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_9<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.KeyEventHandler.Invoke, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_10<TThis, TArg0>(
					global::System.__ComObject __this, 
					object sender, 
					TArg0 e, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_sender = default(void*);
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_sender = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									e, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_TArg0__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IRoutedEventArgsFactory.CreateInstance, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.IntPtr Stub_11<TThis>(
					global::System.__ComObject __this, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___hr;
			// Marshalling
			fixed (global::System.IntPtr* pinned_innerInterface = &(innerInterface))
			{
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									baseInterface, 
									pinned_innerInterface, 
									&(unsafe_value__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				value__retval = unsafe_value__retval;
			}
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_12<TThis, TArg0, TArg1>(
					global::System.__ComObject __this, 
					TArg0 sender, 
					TArg1 args, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TArg1__arg = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									sender, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TArg1__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									args, 
									typeof(TArg1).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_TArg1__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg1__arg)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides.OnDisconnectVisualChildren, [fwd] [return] [EETypeRva:0x00042030] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_13<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerProtected.PeerFromProvider, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_14<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					TArg0 provider, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									provider, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(provider);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00042D60]  -> int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static object Stub_15<TThis>(
					global::System.__ComObject __this, 
					int patternInterface, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_result__retval = default(void*);
			object result__retval = default(object);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_result__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									patternInterface, 
									&(unsafe_result__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::Windows.Foundation.Point Stub_16<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_result__retval;
			global::Windows.Foundation.Point result__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_result__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			result__retval = unsafe_result__retval;
			// Return
			return result__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.HasKeyboardFocusCore, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x00040784] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static bool Stub_17<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			bool result__retval;
			sbyte unsafe_result__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_result__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			result__retval = unsafe_result__retval != 0;
			// Return
			return result__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides3.GetFocusedElementCore, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static object Stub_18<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_result__retval = default(void*);
			object result__retval = default(object);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_result__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_result__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides7.OnProcessKeyboardAccelerators, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_19<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 args, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									args, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(args);
			}
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_20<TThis, TArg0>(
					global::System.__ComObject __this, 
					string propertyName, 
					TArg0 animationPropertyInfo, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_propertyName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				fixed (char* pBuffer_propertyName = propertyName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_propertyName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_propertyName, propertyName, &(hstring_header_propertyName), &(unsafe_propertyName));
					unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										animationPropertyInfo, 
										typeof(TArg0).TypeHandle
									);
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_propertyName, 
										unsafe_TArg0__arg
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(animationPropertyInfo);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Width, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static double Stub_21<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			double unsafe_value__retval;
			double value__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Width, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_22<TThis>(
					global::System.__ComObject __this, 
					double value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_HorizontalAlignment, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00042D60]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_23<TThis>(
					global::System.__ComObject __this, 
					int value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Margin, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::Windows.UI.Xaml.Thickness Stub_24<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Thickness unsafe_value__retval;
			global::Windows.UI.Xaml.Thickness value__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.add_LayoutUpdated, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] System_EventHandler_1_object___Windows_Foundation__EventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_25<TThis>(
					global::System.__ComObject __this, 
					global::System.EventHandler<object> handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<object>).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement3.add_Loading, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A__wux__FrameworkElement_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_26<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>.Invoke, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_27<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 sender, 
					object args, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_args = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									sender, 
									typeof(TArg0).TypeHandle
								);
				unsafe_args = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(args);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_args
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(sender);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_args)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::Windows.Foundation.Size Stub_28<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size availableSize, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_result__retval;
			global::Windows.Foundation.Size result__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								availableSize, 
								&(unsafe_result__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			result__retval = unsafe_result__retval;
			// Return
			return result__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.put_DefaultStyleKey, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_29<TThis>(
					global::System.__ComObject __this, 
					object value, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_value = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_value = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_30<TThis, TResult>(
					global::System.__ComObject __this, 
					string childName, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_childName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				fixed (char* pBuffer_childName = childName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_childName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_childName, childName, &(hstring_header_childName), &(unsafe_childName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_childName, 
										&(unsafe_TResult__retval)
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.get_TextWrapping, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x00042D60] Windows_UI_Xaml_TextWrapping__Windows_UI_Xaml__TextWrapping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::Windows.UI.Xaml.TextWrapping Stub_31<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextWrapping unsafe_value__retval;
			global::Windows.UI.Xaml.TextWrapping value__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.put_Text, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_32<TThis>(
					global::System.__ComObject __this, 
					string value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___hr;
			// Marshalling
			fixed (char* pBuffer_value = value)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.add_ContextMenuOpening, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040CE0] Windows_UI_Xaml_Controls_ContextMenuOpeningEventHandler__Windows_UI_Xaml_Controls__ContextMenuOpeningEventHandler *, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Stub_33<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_handler = default(void*);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_handler = (void*)global::System.Runtime.InteropServices.McgMarshal.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IStyleSelectorOverrides.SelectStyleCore, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_34<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					object item, 
					TArg0 container, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_item = default(void*);
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_item = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									container, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_item, 
									unsafe_TArg0__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_UnderlyingType, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x00040F38] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.Type Stub_35<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Type__Impl.UnsafeType unsafe_value__retval = default(global::System.Type__Impl.UnsafeType);
			global::System.Type value__retval = default(global::System.Type);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Type__Impl.UnsafeType);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_value__retval.Name, 
									((int)unsafe_value__retval.Kind)
								);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.Name.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [fwd] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_36<TThis>(
					global::System.__ComObject __this, 
					object instance, 
					object value, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_instance = default(void*);
			void* unsafe_value = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_instance = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(instance);
				unsafe_value = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_instance, 
									unsafe_value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_instance)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.Globalization.ICalendar.put_Era, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_37<TThis>(
					global::System.__ComObject __this, 
					int value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.Globalization.ILanguageFactory.CreateLanguage, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::System.IntPtr Stub_38<TThis>(
					global::System.__ComObject __this, 
					string languageTag, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_languageTag = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_result__retval;
			global::System.IntPtr result__retval;
			int unsafe___hr;
			// Marshalling
			fixed (char* pBuffer_languageTag = languageTag)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_languageTag;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_languageTag, languageTag, &(hstring_header_languageTag), &(unsafe_languageTag));
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_languageTag, 
									&(unsafe_result__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				result__retval = unsafe_result__retval;
			}
			// Return
			return result__retval;
		}

		// Signature, Windows.Foundation.AsyncOperationCompletedHandler<Windows.Storage.IStorageItem>.Invoke, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [EETypeRva:0x00042D60]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_39<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					int asyncStatus, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									asyncStatus
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Storage.IStorageFolder.CreateFileAsync, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [EETypeRva:0x00042D60]  -> int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_40<TThis, TResult>(
					global::System.__ComObject __this, 
					string desiredName, 
					int options, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_desiredName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				fixed (char* pBuffer_desiredName = desiredName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_desiredName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_desiredName, desiredName, &(hstring_header_desiredName), &(unsafe_desiredName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_desiredName, 
										options, 
										&(unsafe_TResult__retval)
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.IStorageFile.CopyAsync, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_41<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					TArg0 destinationFolder, 
					string desiredNewName, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.HSTRING unsafe_desiredNewName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									destinationFolder, 
									typeof(TArg0).TypeHandle
								);
				fixed (char* pBuffer_desiredNewName = desiredNewName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_desiredNewName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_desiredNewName, desiredNewName, &(hstring_header_desiredNewName), &(unsafe_desiredNewName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_TArg0__arg, 
										unsafe_desiredNewName, 
										&(unsafe_TResult__retval)
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(destinationFolder);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.IStorageFile.CopyAsync, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [EETypeRva:0x00042D60]  -> int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_42<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					TArg0 destinationFolder, 
					string desiredNewName, 
					int option, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.HSTRING unsafe_desiredNewName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									destinationFolder, 
									typeof(TArg0).TypeHandle
								);
				fixed (char* pBuffer_desiredNewName = desiredNewName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_desiredNewName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_desiredNewName, desiredNewName, &(hstring_header_desiredNewName), &(unsafe_desiredNewName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_TArg0__arg, 
										unsafe_desiredNewName, 
										option, 
										&(unsafe_TResult__retval)
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(destinationFolder);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_Size, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static ulong Stub_43<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			ulong unsafe_value__retval;
			ulong value__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.put_Size, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_44<TThis>(
					global::System.__ComObject __this, 
					ulong value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.GetInputStreamAt, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static TResult Stub_45<TThis, TResult>(
					global::System.__ComObject __this, 
					ulong position, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									position, 
									&(unsafe_TResult__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.get_Capacity, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static uint Stub_46<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value__retval;
			uint value__retval;
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Storage.Streams.IBuffer.put_Length, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_47<TThis>(
					global::System.__ComObject __this, 
					uint value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,uint>.get_Progress, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x00040CE0] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IBuffer__uint___Windows_Foundation__AsyncOperationProgressHandler_A__w_Storage_Streams_IBuffer_j_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint> Stub_48<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			void* unsafe___value__retval = default(void*);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_49<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					uint progressInfo, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									progressInfo
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<uint,uint>.get_Progress, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [retval] [nativebyref] [EETypeRva:0x00040CE0] Windows_Foundation_AsyncOperationProgressHandler_2_uint__uint___Windows_Foundation__AsyncOperationProgressHandler_A_uint_j_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint> Stub_50<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			void* unsafe___value__retval = default(void*);
			global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>).TypeHandle
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCompletion, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x00042D60]  -> int, [fwd] [in] [EETypeRva:0x00042D60]  -> int, [fwd] [in] [EETypeRva:0x000419B0] System_Guid__System.Guid, [fwd] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, [fwd] [in] [EETypeRva:0x00042D60]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_51<TThis>(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					int status, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			// Call to native method
			unsafe___hr = global::__Interop.ComCallHelpers.Call(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}

		// Signature, System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop.GetTypeAttr, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_52<TThis>(
					global::System.__ComObject __this, 
					out global::System.IntPtr ppTypeAttr, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			fixed (global::System.IntPtr* pinned_ppTypeAttr = &(ppTypeAttr))
			{
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									pinned_ppTypeAttr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop.GetTypeComp, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00043660] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_53<TThis>(
					global::System.__ComObject __this, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_ppTComp = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_ppTComp = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_ppTComp)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				ppTComp = (global::System_Runtime_InteropServices_ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTComp), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
											"al, PublicKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop.GetFuncDesc, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_54<TThis>(
					global::System.__ComObject __this, 
					int index, 
					out global::System.IntPtr ppFuncDesc, 
					int __targetIndex)
		{
			// Setup
			int unsafe___hr;
			// Marshalling
			fixed (global::System.IntPtr* pinned_ppFuncDesc = &(ppFuncDesc))
			{
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									index, 
									pinned_ppFuncDesc
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			}
			// Return
		}

		// Signature, System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop.GetDocumentation, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000409D0] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000409D0] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x000409D0] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_55<TThis>(
					global::System.__ComObject __this, 
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			ushort* unsafe_strDocString = default(ushort*);
			ushort* unsafe_strHelpFile = default(ushort*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_strName = null;
				unsafe_strDocString = null;
				fixed (int* pinned_dwHelpContext = &(dwHelpContext))
				{
					unsafe_strHelpFile = null;
					// Call to native method
					unsafe___hr = global::__Interop.ComCallHelpers.Call(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										index, 
										&(unsafe_strName), 
										&(unsafe_strDocString), 
										pinned_dwHelpContext, 
										&(unsafe_strHelpFile)
									);
					global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
					strHelpFile = global::System.Runtime.InteropServices.McgMarshal.ConvertBSTRToString(unsafe_strHelpFile);
				}
				strDocString = global::System.Runtime.InteropServices.McgMarshal.ConvertBSTRToString(unsafe_strDocString);
				strName = global::System.Runtime.InteropServices.McgMarshal.ConvertBSTRToString(unsafe_strName);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.SysFreeString(unsafe_strName);
				global::System.Runtime.InteropServices.McgMarshal.SysFreeString(unsafe_strDocString);
				global::System.Runtime.InteropServices.McgMarshal.SysFreeString(unsafe_strHelpFile);
			}
		}

		// Signature, System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeInfo, [fwd] [return] [EETypeRva:0x00042030] void__int, [fwd] [in] [EETypeRva:0x000419B0] int__int, [fwd] [out] [managedbyref] [nativebyref] [EETypeRva:0x00043660] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_56<TThis>(
					global::System.__ComObject __this, 
					int hRef, 
					out global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop ppTI, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_ppTI = default(void*);
			int unsafe___hr;
			try
			{
				// Marshalling
				unsafe_ppTI = null;
				// Call to native method
				unsafe___hr = global::__Interop.ComCallHelpers.Call(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									hRef, 
									&(unsafe_ppTI)
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				ppTI = (global::System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTI), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=999.999.999.999, Culture=neutr" +
											"al, PublicKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTI)));
			}
		}

		// Signature, System_Runtime_InteropServices_ComTypes.ITypeInfo__System_Private_Interop.ReleaseTypeAttr, [fwd] [return] [EETypeRva:0x00041F6C] void__void, [fwd] [in] [EETypeRva:0x000419B0] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static void Stub_57<TThis>(
					global::System.__ComObject __this, 
					global::System.IntPtr pTypeAttr, 
					int __targetIndex)
		{
			// Marshalling
			// Call to native method
			global::__Interop.ComCallHelpers.Call__void__(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								pTypeAttr
							);
			global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
			// Return
		}
	}

	internal unsafe static partial class ReverseComStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [out] [retval] [nativebyref] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_1(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::__Interop.Intrinsics.HasThisCall__4(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = global::System.Runtime.InteropServices.McgMarshal.StringToHString(value__retval);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).handle);
					(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [rev] [in] [EETypeRva:0x00040F38] System_Type__Windows_UI_Xaml_Interop__TypeName, [rev] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [rev] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_2(
					object __this, 
					void* unsafe_value, 
					global::System.Type__Impl.UnsafeType unsafe_targetType, 
					void* unsafe_parameter, 
					global::System.Runtime.InteropServices.HSTRING unsafe_language, 
					void** unsafe_result__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object value = default(object);
			global::System.Type targetType = default(global::System.Type);
			object parameter = default(object);
			string language = default(string);
			if (unsafe_result__retval != null)
				(*(unsafe_result__retval)) = null;
			object result__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				targetType = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_targetType.Name, 
									((int)unsafe_targetType.Kind)
								);
				parameter = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_parameter));
				language = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_language);
				// Call to managed method
				result__retval = global::__Interop.Intrinsics.HasThisCall__6(
									__this, 
									__methodPtr, 
									value, 
									targetType, 
									parameter, 
									language
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(result__retval);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_result__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_result__retval)))));
					(*(unsafe_result__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Input.KeyEventHandler.Invoke, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_3<TArg0>(
					object __this, 
					void* unsafe_sender, 
					void* unsafe_e, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object sender = default(object);
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__9<TArg0>(
									__this, 
									__methodPtr, 
									sender, 
									TArg0__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.UIElement,Windows.UI.Xaml.DragStartingEventArgs>.Invoke, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_4<TArg0, TArg1>(
					object __this, 
					void* unsafe_sender, 
					void* unsafe_args, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			TArg1 TArg1__arg = default(TArg1);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_sender), 
									typeof(TArg0).TypeHandle
								);
				TArg1__arg = (TArg1)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_args), 
									typeof(TArg1).TypeHandle
								);
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__11<TArg0, TArg1>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									TArg1__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_5<TArg0>(
					object __this, 
					void* unsafe_p, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_p), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__28<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_6<TResult>(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING unsafe_fullName, 
					void** unsafe_result__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			string fullName = default(string);
			if (unsafe_result__retval != null)
				(*(unsafe_result__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				fullName = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_fullName);
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__29<TResult>(
									__this, 
									__methodPtr, 
									fullName
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_result__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_result__retval)))));
					(*(unsafe_result__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_BaseType, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_7<TResult>(
					object __this, 
					void** unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__30<TResult>(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_value__retval)))));
					(*(unsafe_value__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_IsArray, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [out] [retval] [nativebyref] [EETypeRva:0x00040784] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_8(
					object __this, 
					sbyte* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			bool value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::__Interop.Intrinsics.HasThisCall__31(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (value__retval ? ((sbyte)1) : ((sbyte)0));
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.get_UnderlyingType, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [out] [retval] [nativebyref] [EETypeRva:0x00040F38] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_9(
					object __this, 
					global::System.Type__Impl.UnsafeType* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Type__Impl.UnsafeType);
			global::System.Type value__retval = default(global::System.Type);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::__Interop.Intrinsics.HasThisCall__32(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.HSTRING unsafe_value__retval__HSTRING__Name;
					int unsafe_value__retval__int__Kind;
					global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
										value__retval, 
										out unsafe_value__retval__HSTRING__Name, 
										out unsafe_value__retval__int__Kind
									);
					(*(unsafe_value__retval)).Name = unsafe_value__retval__HSTRING__Name;
					(*(unsafe_value__retval)).Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_value__retval__int__Kind;
				}
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).Name.handle);
					(*(unsafe_value__retval)) = default(global::System.Type__Impl.UnsafeType);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, [rev] [in] [EETypeRva:0x0004137C] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_10(
					object __this, 
					void* unsafe_instance, 
					void* unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object instance = default(object);
			object value = default(object);
			try
			{
				// Marshalling
				instance = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance));
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__33(
									__this, 
									__methodPtr, 
									instance, 
									value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.RunInitializer, [rev] [return] [EETypeRva:0x00042030] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_11(
					object __this, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__34(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.IStorageFolder.CreateFileAsync, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [rev] [in] [EETypeRva:0x00042D60] Windows_Storage_CreationCollisionOption__Windows_Storage__CreationCollisionOption, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_12<TResult>(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING unsafe_desiredName, 
					global::Windows.Storage.CreationCollisionOption unsafe_options, 
					void** unsafe_operation__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			string desiredName = default(string);
			if (unsafe_operation__retval != null)
				(*(unsafe_operation__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				desiredName = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_desiredName);
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__39<TResult>(
									__this, 
									__methodPtr, 
									desiredName, 
									unsafe_options
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_operation__retval != null)
					(*(unsafe_operation__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_operation__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_operation__retval)))));
					(*(unsafe_operation__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.IStorageFile.CopyAsync, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_13<TArg0, TResult>(
					object __this, 
					void* unsafe_destinationFolder, 
					void** unsafe_operation__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			if (unsafe_operation__retval != null)
				(*(unsafe_operation__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_destinationFolder), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__42<TArg0, TResult>(
									__this, 
									__methodPtr, 
									TArg0__arg
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_operation__retval != null)
					(*(unsafe_operation__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_operation__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_operation__retval)))));
					(*(unsafe_operation__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.IStorageFile.CopyAsync, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_14<TArg0, TResult>(
					object __this, 
					void* unsafe_destinationFolder, 
					global::System.Runtime.InteropServices.HSTRING unsafe_desiredNewName, 
					void** unsafe_operation__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			string desiredNewName = default(string);
			if (unsafe_operation__retval != null)
				(*(unsafe_operation__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_destinationFolder), 
									typeof(TArg0).TypeHandle
								);
				desiredNewName = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_desiredNewName);
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__43<TArg0, TResult>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									desiredNewName
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_operation__retval != null)
					(*(unsafe_operation__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_operation__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_operation__retval)))));
					(*(unsafe_operation__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.IStorageFile.CopyAsync, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [EETypeRva:0x00040A94] string__System.Runtime.InteropServices.HSTRING, [rev] [in] [EETypeRva:0x00042D60] Windows_Storage_NameCollisionOption__Windows_Storage__NameCollisionOption, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_15<TArg0, TResult>(
					object __this, 
					void* unsafe_destinationFolder, 
					global::System.Runtime.InteropServices.HSTRING unsafe_desiredNewName, 
					global::Windows.Storage.NameCollisionOption unsafe_option, 
					void** unsafe_operation__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			string desiredNewName = default(string);
			if (unsafe_operation__retval != null)
				(*(unsafe_operation__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_destinationFolder), 
									typeof(TArg0).TypeHandle
								);
				desiredNewName = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_desiredNewName);
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__44<TArg0, TResult>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									desiredNewName, 
									unsafe_option
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_operation__retval != null)
					(*(unsafe_operation__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_operation__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_operation__retval)))));
					(*(unsafe_operation__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_Size, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_16(
					object __this, 
					ulong* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			ulong value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::__Interop.Intrinsics.HasThisCall__47(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.put_Size, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_17(
					object __this, 
					ulong unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__48(
									__this, 
									__methodPtr, 
									unsafe_value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.GetInputStreamAt, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x000419B0] ulong__unsigned __int64, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_18<TResult>(
					object __this, 
					ulong unsafe_position, 
					void** unsafe_stream__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_stream__retval != null)
				(*(unsafe_stream__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				// Call to managed method
				TResult__retval = global::__Interop.Intrinsics.HasThisCall__49<TResult>(
									__this, 
									__methodPtr, 
									unsafe_position
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_stream__retval != null)
					(*(unsafe_stream__retval)) = (void*)global::System.Runtime.InteropServices.McgMarshal.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_stream__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_stream__retval)))));
					(*(unsafe_stream__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.get_Capacity, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [out] [retval] [nativebyref] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_19(
					object __this, 
					uint* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			uint value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::__Interop.Intrinsics.HasThisCall__52(
									__this, 
									__methodPtr
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.put_Length, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_20(
					object __this, 
					uint unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__53(
									__this, 
									__methodPtr, 
									unsafe_value
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [EETypeRva:0x000419B0] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_21<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					uint unsafe_progressInfo, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__55<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_progressInfo
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [rev] [return] [EETypeRva:0x00042030] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [EETypeRva:0x00042D60] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		internal static int Stub_22<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					global::Windows.Foundation.AsyncStatus unsafe_asyncStatus, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgMarshal.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::__Interop.Intrinsics.HasThisCall__56<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_asyncStatus
								);
				global::System.Diagnostics.DebugAnnotations.PreviousCallContainsDebuggerStepInCode();
				// Return
				return 0;
			}
			catch (global::System.Exception hrExcep) when (global::System.Runtime.InteropServices.McgMarshal.PropagateException(hrExcep))
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}
	}
}

